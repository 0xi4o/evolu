// this file is generated by generateSql script
import { SqliteQuery } from "./Sqlite.js";
export const selectOwner: SqliteQuery = {
  sql: `select "id", "mnemonic", "encryptionKey" from "evolu_owner"`,
};

export const createMessageTable: SqliteQuery = {
  sql: `create table "evolu_message" ("timestamp" blob primary key, "table" blob, "row" blob, "column" blob, "value" blob)`,
};

export const createMessageTableIndex: SqliteQuery = {
  sql: `create index "index_evolu_message" on "evolu_message" ("table", "row", "column", "timestamp")`,
};

export const createOwnerTable: SqliteQuery = {
  sql: `create table "evolu_owner" ("id" blob, "mnemonic" blob, "encryptionKey" blob, "timestamp" blob, "merkleTree" blob)`,
};

export const insertOwner: SqliteQuery = {
  sql: `insert into "evolu_owner" ("id", "mnemonic", "encryptionKey", "timestamp", "merkleTree") values (?, ?, ?, ?, ?)`,
};

export const selectOwnerTimestampAndMerkleTree: SqliteQuery = {
  sql: `select "timestamp", "merkleTree" from "evolu_owner"`,
};

export const selectLastTimestampForTableRowColumn: SqliteQuery = {
  sql: `select "timestamp" from "evolu_message" where "table" = ? and "row" = ? and "column" = ? order by "timestamp" desc limit ?`,
};

export const insertIntoMessagesIfNew: SqliteQuery = {
  sql: `insert into "evolu_message" ("timestamp", "table", "row", "column", "value") values (?, ?, ?, ?, ?) on conflict do nothing`,
};

export const updateOwnerTimestampAndMerkleTree: SqliteQuery = {
  sql: `update "evolu_owner" set "merkleTree" = ?, "timestamp" = ?`,
};

export const selectMessagesToSync: SqliteQuery = {
  sql: `select * from "evolu_message" where "timestamp" >= ? order by "timestamp"`,
};
